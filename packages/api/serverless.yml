service: one-up-api

package:
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: ${opt:stage,'dev'}
  environment:
    DYNAMODB_USERS_TABLE: ${self:service}-users-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - 'arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_USERS_TABLE}'

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
    packager: 'yarn' # Packager that will be used to package your external modules
  warmup:
    default:
      enabled: true
      events:
        - schedule: rate(5 minutes)
      prewarm: true
      concurrency: 1
  prune:
    automatic: true
    number: 1 # Number of versions to keep
  serverless-offline:
    httpPort: 4000

functions:
  getUser:
    handler: src/index.getUser
    events:
      - http:
          path: user/{userId}
          method: get
          cors: true
  addActivity:
    handler: src/index.addActivity
    events:
      - http:
          path: user/{userId}/activities
          method: post
          cors: true
  updateActivity:
    handler: src/index.updateActivity
    events:
      - http:
          path: user/{userId}/activities/{activityKey}/edit
          method: put
          cors: true
  addActivityHistory:
    handler: src/index.addActivityHistory
    events:
      - http:
          path: user/{userId}/activities/{activityKey}
          method: post
          cors: true
  getActivities:
    handler: src/index.getActivities
    events:
      - http:
          path: user/{userId}/activities
          method: get
          cors: true
  getActivityHistory:
    handler: src/index.getActivityHistory
    events:
      - http:
          path: user/{userId}/activities/history
          method: get
          cors: true

# resources:
#   - ${file(resources/${opt:stage, self:provider.stage}-dynamodb.yml)}

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-warmup
  - serverless-dotenv-plugin
  - serverless-prune-plugin
